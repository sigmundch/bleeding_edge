# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

[ $runtime == vm ]
isolate2_negative_test: Skip  # Need to resolve correct behaviour.
serialization_test: Skip  # tests dart2js-specific serialization code
spawn_uri_test: Fail, OK # test uses a ".js" suffix that is bogus on vm.
compute_this_script_browser_test: Skip # browser specific test
timer_not_available_test: Fail, OK # only meant to test when there is no way to
                                   # implement timer (currently only in d8)

[ $compiler == none && $runtime == drt ]
serialization_test: Skip  # tests dart2js-specific serialization code
spawn_uri_test: Skip # uses a .js extension (not for dartium)
spawn_uri_negative_test: Skip # ditto
spawn_uri_vm_test: Skip # not implemented in dartium yet.
spawn_uri_vm_negative_test: Skip
timer_not_available_test: Fail, OK # only meant to test when there is no way to
                                   # implement timer (currently only in d8)

[ $compiler == dartc ]
serialization_test: Skip  # tests dart2js-specific serialization code
isolate_negative_test: Fail    # status change with --check-only
isolate2_negative_test: Fail   # status change with --check-only
spawn_function_negative_test: Fail, OK # Fails at runtime.
spawn_uri_negative_test: Fail, OK # Fails at runtime.
spawn_uri_vm_negative_test: Fail, OK # Fails at runtime.
unresolved_ports_negative_test: Fail, OK # Fails at runtime.

[ $runtime == safari ]
cross_isolate_message_test: Skip      # Depends on 32/64 bit Safari. See Issue 1120
mixed_test: Pass,Fail               # Depends on 32/64 bit Safari. See Issue 1120
mixed2_test: Pass,Fail              # Depends on 32/64 bit Safari. See Issue 1120
message_test: Skip

# TODO(ager): Update these.
[ $runtime == ie && $system == windows ]
v2*: Skip

[ $runtime == safari && $system == macos ]
v2*: Skip

[ $runtime == ie && ($system == linux || $system == macos) ]
*: Skip

[ $runtime == safari && ($system == linux || $system == windows) ]
*: Skip

# TODO(jmesserly): now that we have a bot, we need to set up Opera testing.
[ $runtime == opera ]
*: Skip

[ $arch == simarm ]
*: Skip

[ $arch == arm ]
*: Skip

[ $compiler == dart2js && $browser ]
spawn_uri_test: Skip # dart2js does not support spawnUri yet
spawn_uri_negative_test: Skip # ditto
spawn_uri_vm_test: Skip # test uses a ".dart" suffix that only works in vm.
spawn_uri_vm_negative_test: Skip # ditto above.
timer_not_available_test: Fail, OK # only meant to test when there is no way to
                                   # implement timer (currently only in d8)

[ $compiler == dart2js && $runtime == d8 ]
spawn_uri_test: Fail, OK # loading another file is not supported in d8
spawn_uri_negative_test: Pass # for the wrong reasons (not supported in d8)
spawn_uri_vm_test: Skip # test uses a ".dart" suffix that only works in vm.
spawn_uri_vm_negative_test: Skip # ditto above.
timer_cancel_test: Fail,OK # Needs Timer to run.
timer_cancel1_test: Fail,OK # Needs Timer to run.
timer_cancel2_test: Fail,OK # Needs Timer to run.
multiple_timer_test: Fail,OK # Needs Timer to run.
timer_test: Fail,OK # Needs Timer to run.
timer_repeat_test: Fail,OK # Needs Timer to run.

[ $compiler == dart2js && $runtime == none ]
*: Fail, Pass # TODO(ahe): Triage these tests.

[ $compiler == dart2dart ]
# Skip until we stabilize language tests.
*: Skip
