# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

[ $compiler == dart2js || $compiler == dart2dart ]
# VM specific tests that should not be run by dart2js.
*vm_test: Skip
*vm_negative_test: Skip

[ $compiler == dart2js && $checked ]
assign_static_type_test/01: Fail
assign_static_type_test/02: Fail
assign_static_type_test/03: Fail
assign_static_type_test/04: Fail
type_variable_bounds_test/01: Fail
type_variable_bounds_test/02: Fail
type_variable_bounds_test/04: Fail
type_variable_bounds_test/05: Fail
type_variable_bounds2_test/00: Fail
type_variable_bounds2_test/03: Fail
type_variable_bounds2_test/05: Fail
type_variable_bounds2_test/06: Pass # For the wrong reasons.
type_variable_scope_test/00: Fail
type_variable_scope_test/01: Fail
type_variable_scope_test/02: Fail
type_variable_scope_test/03: Fail
type_variable_scope_test/04: Fail
type_variable_scope_test/05: Fail
type_variable_scope2_test: Fail
assign_top_method_negative_test: Pass # For the wrong reasons.
f_bounded_quantification_test/01: Fail
f_bounded_quantification_test/02: Fail
default_factory2_test/01: Fail # Type bounds for type variable not checked.
closure_type_test: Fail # does not detect type error in checked mode.
function_type_test: Fail # does not detect type error in checked mode.
function_malformed_result_type_test: Fail # does not detect type error in checked mode.
void_type_test: Fail # does not detect type error in checked mode.

arithmetic_test: Fail

[ $compiler == dart2js && $unchecked ]
assertion_test: Fail

[ $compiler == dart2js ]
getter_declaration_negative_test: Fail # This will be fixed when dart2js reject old getter syntax.

function_type_this_parameter_test: Crash # Issue 4417.
compile_time_constant_test/02: Fail, OK # By inlining the use-function we don't compile the static variable.
compile_time_constant8_test: Fail # We don't take the generic type into account yet.

# Fail "const EmptyLink<Element>" must be a compile-time constant if unchecked on linux.
# Crash infinite loop on Mac and dart2js checked mode on linux.
function_type_alias6_test: Crash, Fail

static_initializer_type_error_test: Fail # Checked mode not supported.

# Compilation errors.
const_var_test: Fail # Map literals take 2 type arguments.
map_literal3_test: Fail # Map literals take 2 type arguments.
ct_const_test: Fail # We don't take the generic type into account yet.
char_escape_test: Fail # Unhandled non-BMP character: U+10000
comparison_test: Fail # Issue 4551
constructor6_test: Fail # Closures inside initializers not implemented.
default_factory_library_test: Fail # lib is not a type
dynamic_test: Fail # cannot resolve type F1
factory3_test: Fail # internal error: visitIs for type variables not implemented
function_literals2_test: Fail # Closures inside initializers not implemented.
function_syntax_test/none: Fail # Closures inside initializers not implemented.
function_test: Fail # internal error: Closures inside initializers not implemented
function_type_alias2_test: Fail # cannot resolve type f1
function_type_alias3_test: Fail # cannot resolve type F
function_type_alias4_test: Fail # cannot resolve type F
function_type_alias5_test/00: Fail # visitIs for typedefs not implemented
function_type_alias5_test/01: Fail # visitIs for typedefs not implemented
function_type_alias5_test/02: Fail # visitIs for typedefs not implemented
function_type_alias6_test: Fail # visitIs for typedefs not implemented.
function_type_alias7_test/00: Fail # wrongly accepts default values in typedef
function_type_alias_test: Fail # cannot resolve type Fun
function_type_parameter2_test: Fail # Internal Error: expected optional parameters
function_type_parameter_test: Fail # Internal Error: expected optional parameters
generic_instanceof_test: Fail # cannot resolve type T
generic_instanceof2_test: Fail # fails an instance of test at run time
generic_instanceof3_test: Fail # cannot handle generics.
generic_test: Fail # cannot resolve type T
get_set_syntax_test/none: Fail # Parsing of pseudo keywords.
getter_no_setter_test/01: Crash # Internal error: NullPointerException : method: 'get:enclosingElement'
implicit_scope_test: Fail # duplicate definition of a="bar"
library_prefixes_test: Fail # other is not a type
local_function_test: Fail # TypeError: Object #<Closure> has no method '$call$2' (bad exception mapping).
many_generic_instanceof_test: Fail # cannot resolve type T
method_binding_test: Fail # internal error: super property read not implemented.
method_name_test: Fail # Parsing of pseudo keywords.
method_override_test: Fail # cannot resolve type GetKeysFunctionType
method_override2_test/00: Fail # accepts illegal override
method_override2_test/01: Fail # accepts illegal override
method_override2_test/02: Fail # accepts illegal override
method_override2_test/03: Fail # accepts illegal override
parameter_initializer6_negative_test: Fail # Issue 3502
named_parameters2_test: Fail # Unimplemented non-matching static call
named_parameters3_test: Fail # Unimplemented non-matching static call
named_parameters4_test: Fail # Unimplemented non-matching static call
operator6_test: Fail # Constant folding of bit-operations does not agree with runtime behavior. Issue 2887.
pseudo_kw_test: Fail # Unexpected token '('
super_implicit_closure_test: Fail # internal error: super property read not implemented
super_operator_test: Fail # internal error: super property store not implemented
switch_label_test: Fail # error: target of continue is not a loop or switch case
setter_no_getter_call_test/01: Crash  # Issue 4361


# External tests.
external_test/01: Fail
external_test/02: Fail
external_test/11: Fail
external_test/12: Fail
external_test/13: Skip  # Runtime error (missing patch).
external_test/14: Fail
external_test/15: Fail
external_test/20: Skip  # Runtime error (missing patch).
external_test/21: Fail
external_test/22: Fail
external_test/23: Fail
external_test/30: Fail
external_test/31: Fail


# Implementation errors (library or generated code).
generic_deep_test: Fail # Expect.isTrue(false) fails.
generic_inheritance_test: Fail # Expect.isTrue(false) fails.
generic_parameterized_extends_test: Fail # Expect.isTrue(false) fails.
instanceof2_test: Fail # Expect.equals(expected: <true>, actual: <false>) fails.
instanceof3_test: Fail # cannot resolve type UndeclaredType.
list_literal4_test: Fail # Illegal argument(s): 0 -- checked mode test.
map_literal4_test: Fail # Attempt to modify an immutable object -- checked mode test.
named_parameters_type_test: Fail # Expect.equals(expected: <111>, actual: <0>) fails. -- checked mode test.
type_checks_in_factory_method_test: Fail # Expect.equals(expected: <true>, actual: <false>) fails. -- checked mode test.
type_dartc_test: Fail # Expect.equals(expected: <1>, actual: <0>) -- checked mode test.


class_cycle_negative_test: Fail, OK # Bad test: assumes eager loading.
external_test/16: Fail, OK # Bad test: assumes eager loading.
field1_negative_test: Fail, OK # Bad test: assumes eager loading.
field6_negative_test: Fail, OK # Bad test: assumes eager loading.
field7_negative_test: Fail, OK # Bad test: assumes eager loading.
interface_cycle_negative_test: Fail, OK # Bad test: assumes eager loading.
syntax_test/47: Fail, OK # Bad test: assumes eager loading.


#
# The following tests are all negative tests that should be fixed.
#
abstract_static_negative_test: Fail # Negative language test.
abstract_syntax_test/01: Fail # Negative language test.
abstract_syntax_test/02: Fail # Negative language test.
assign_top_method_negative_test: Fail # Negative language test.
class_extends_negative_test: Fail # Negative language test.
const_constructor_syntax_test/01: Fail # Negative language test.
const_constructor_syntax_test/02: Fail # Negative language test.
const_constructor_syntax_test/03: Fail # Negative language test.
const_constructor_syntax_test/04: Fail # Negative language test.
const_field_negative_test: Fail # Negative language test.
const_init4_negative_test: Fail # Negative language test.
const_init_negative_test: Fail # Negative language test.
const_syntax_test/01: Fail # Negative language test.
const_syntax_test/02: Fail # Negative language test.
const_syntax_test/03: Fail # Negative language test.
constructor2_negative_test: Fail # Negative language test.
constructor_negative_test: Pass # For the wrong reason.
constructor_return_negative_test: Fail # Negative language test.
constructor_return_with_arrow_negative_test: Fail # Negative language test.
constructor_return_with_init_and_arrow_negative_test: Fail # Negative language test.
constructor_return_with_init_negative_test: Fail # Negative language test.
duplicate_implements_test/01: Fail # Negative language test.
duplicate_implements_test/02: Fail # Negative language test.
duplicate_implements_test/03: Fail # Negative language test.
duplicate_implements_test/04: Fail # Negative language test.
empty_body_member_negative_test: Fail # Negative language test.
factory2_negative_test: Fail # Negative language test.
factory3_negative_test: Fail # Negative language test.
factory_negative_test: Fail # Negative language test.
field2_negative_test: Fail # Negative language test.
field3_negative_test: Fail # Negative language test.
field4_negative_test: Fail # Negative language test.
field5_negative_test: Fail # Negative language test.
field6a_negative_test: Fail # Negative language test.
field7a_negative_test: Fail # Negative language test.
final_for_in_variable_test/01: Fail # Negative language test
final_param_negative_test: Fail # Negative language test.
final_var_negative_test: Fail # Negative language test.
instantiate_type_variable_negative_test: Pass  # For the wrong reason.
interface_factory3_negative_test: Fail # Negative language test.
interface_factory_constructor_negative_test: Fail # Negative language test.
interface_static_method_negative_test: Fail # Negative language test.
list_literal1_negative_test: Fail # Negative language test.
list_literal2_negative_test: Fail # Negative language test.
map_literal1_negative_test: Fail # Negative language test.
map_literal2_negative_test: Fail # Negative language test.
new_expression_type_args_frog_test/02: Fail # Negative language test.
non_const_super_negative_test: Fail # Negative language test.
number_identifier_negative_test: Fail # Negative language test.
operator1_negative_test: Fail # Negative language test.
override_field_test/04: Fail # Broken test.
prefix16_test: Fail
prefix18_negative_test: Fail # Negative language test.
prefix20_negative_test: Fail # Negative language test.
prefix23_negative_test: Fail # Negative language test.
pseudo_kw_illegal_test/01: Fail # Negative language test.
pseudo_kw_illegal_test/03: Fail # Negative language test.
pseudo_kw_illegal_test/05: Fail # Negative language test.
pseudo_kw_illegal_test/06: Fail # Negative language test.
pseudo_kw_illegal_test/07: Fail # Negative language test.
pseudo_kw_illegal_test/08: Fail # Negative language test.
pseudo_kw_illegal_test/09: Fail # Negative language test.
pseudo_kw_illegal_test/10: Fail # Negative language test.
pseudo_kw_illegal_test/11: Fail # Negative language test.
pseudo_kw_illegal_test/12: Fail # Negative language test.
pseudo_kw_illegal_test/13: Fail # Negative language test.
pseudo_kw_illegal_test/14: Fail # Negative language test.
pseudo_kw_illegal_test/15: Fail # Negative language test.
pseudo_kw_illegal_test/16: Fail # Negative language test.
scope_negative_test: Fail # Negative language test.
setter_declaration2_negative_test: Fail # Negative language test.
setter_declaration_negative_test: Fail # Negative language test.
static_field_test/01: Fail # Negative language test.
static_field_test/03: Fail # Negative language test.
static_final_field2_negative_test: Fail # Negative language test.too
static_final_field_negative_test: Fail # Negative language test.
static_top_level_test/00: Fail # Negative language test.
static_top_level_test/01: Fail # Negative language test.
static_top_level_test/02: Fail # Negative language test.
static_top_level_test/03: Fail # Negative language test.
static_top_level_test/04: Fail # Negative language test.
static_top_level_test/05: Fail # Negative language test.
static_top_level_test/06: Fail # Negative language test.
static_top_level_test/07: Fail # Negative language test.
string_interpolation7_negative_test: Fail # Negative language test.
throw7_negative_test: Fail # Negative language test.
try_catch_syntax_test/08: Fail # Negative language test.

disable_privacy_test: Fail, OK # VM specific test.
numbers_test: Fail, OK # (unintended?) VM specific test.

const_syntax_test/04: Fail

div_by_zero_test: Fail, OK # Leg only has doubles.
bit_operations_test: Fail, OK # Tests bit operations outside the 32 bit range.
# The following test will start to fail again once dart2js implements the
# runtime semantics for numbers.
# Should be: Fail, OK # Expects negative results of bit-operations.
optimization_test: Pass

expect_test: Fail, OK # JavaScript canonicalizes all strings. This test assumes that string-concatenation returns a new string.
reg_exp3_test: Fail, OK # Expects exception from const constructor.
list_test: Fail, OK # Obsolete test uses List.copyFrom that was removed on 2011-10-31.


[ $compiler == dart2js && $mode == release ]
assign_top_method_negative_test: Crash


[ $compiler == dart2js && $runtime == none ]
*: Fail, Pass # TODO(ahe): Triage these tests.


[ $compiler == dart2js && $runtime == ff ]
call_through_getter_test: Fail # Expected: ObjectNotClosureException got: Instance of 'TypeError'
call_through_null_getter_test: Fail # Expected: ObjectNotClosureException got: Instance of 'TypeError'
double_to_string_as_fixed_test: Fail
naming_test: Fail


[ $compiler == dart2js && $runtime == ie ]
call_through_getter_test: Fail
call_through_null_getter_test: Fail
div_by_zero_test: Fail
double_to_string_as_fixed_test: Fail
expect_test: Fail
factory3_test: Fail
list_test: Fail
local_function_test: Fail
naming_test: Fail
stack_overflow_test: Fail
type_checks_in_factory_method_test: Fail


[ $compiler == dart2js && $runtime == safari ]
arithmetic_test: Skip # BUG(3492): Times out.
call_through_getter_test: Fail # Expected: ObjectNotClosureException got: Instance of 'TypeError'
call_through_null_getter_test: Fail # Expected: ObjectNotClosureException got: Instance of 'TypeError'
closure3_test: Fail # Uncaught error: Instance of 'TypeError'
method_invocation_test: Fail # Uncaught error: Instance of 'TypeError'
null_pointer_exception_test: Fail # Uncaught error: Instance of 'TypeError'
string_interpolate_npe_test: Fail # Uncaught error: Instance of 'TypeError'
naming_test: Fail

